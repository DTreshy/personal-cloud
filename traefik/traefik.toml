[log]
  # By default, the level is set to ERROR. Alternative logging levels
  # are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
  level = "DEBUG"
  filePath = "/traefik.log"

[docker]
  # Defines a default docker network to use for connections to all
  # containers.  This option can be overridden on a container basis
  # with the traefik.docker.network label.
  network = "traefik"

  # Expose containers by default through Traefik. If set to false,
  # containers that don't have a traefik.enable=true label will be
  # ignored from the resulting routing configuration.
  exposedbydefault = false

[api]
  # Enable the API in insecure mode, which means that the API will be
  # available directly on the entryPoint named traefik. If the entryPoint
  # named traefik is not configured, it will be automatically created on
  # port 8080.
  insecure = false
  dashboard = true

[providers]
  [providers.docker]
    endpoint = "unix:///var/run/docker.sock"
  [providers.file]
    filename = "/traefik-provider.toml"

[[tls.certificates]]
  certFile = "/ssl-certs/domain.cert"
  keyFile = "/ssl-certs/domain.key"
  stores = ["default"]

[entryPoints]
  # Standard HTTP redirects to HTTPS
  [entryPoints.http]
    address = ":80"
    [entryPoints.http.http]
      [entryPoints.http.http.redirections]
        [entryPoints.http.http.redirections.entrypoint]
          to = "https"
          scheme = "https"
  # Standard HTTPS
  [entryPoints.https]
    address = ":443"
    [entryPoints.https.http.tls]
      certResolver = "leresolver"
      [[entryPoints.https.http.tls.domains]]
        main = "dsprojects.pl"
        sans = ["transmission.dsprojects.pl", "jellyfin.dsprojects.pl", "traefik.dsprojects.pl", "cloud.dsprojects.pl"]

# Enable ACME (Let's Encrypt): automatic SSL.
[certificatesresolvers.leresolver.acme]
  email = "szczukowski.damian@gmail.com"
  storage = "acme.json"
  [certificatesresolvers.leresolver.acme.dnsChallenge]
    # Update this to your provider of choice and then ensure necessary variables are in the .env file to support it.
    provider = "ovh"
    delayBeforeCheck = 0
    resolvers = ["8.8.8.8:53"]

[certificatesResolvers.staging.acme]
  email = "szczukowski.damian@gmail.com"
  storage = "acme.json"
  caServer = "https://acme-staging-v02.api.letsencrypt.org/directory"
  [certificatesResolvers.staging.acme.dnsChallenge]
    provider = "ovh"
    delayBeforeCheck = 0
    resolvers = ["8.8.8.8:53"]

[accessLog]
  filePath = "/access.log"

[metrics]
  [metrics.prometheus]

[retry]