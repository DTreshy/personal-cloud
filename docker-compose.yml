version: '3.9'

services:

  traefik:
    container_name: traefik
    image: traefik:v2.9
    restart: unless-stopped
    volumes:
      # So that Traefik can listen to the Docker events (read-only)
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # TOML Configuration with global options
      - ./traefik/traefik.toml:/traefik.toml
      # Configuration for the file provider (needed for host networking and default TLS Options)
      - ./traefik/traefik-provider.toml:/traefik-provider.toml
      # Log File (optional)
      - ./traefik/traefik.log:/traefik.log
      - ./traefik/access.log:/access.log
      - traefik-ssl-certs:/ssl-certs
    ports:
      # The Available Ports (forward your router's incoming ports to the ports on the host)
      - 80:80
      - 443:443
    env_file: .env
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik_https.rule=Host(`traefik.dsprojects.pl`)'
      - 'traefik.http.routers.traefik_https.entrypoints=https'
      - 'traefik.http.routers.traefik_https.tls=true'
      - 'traefik.http.routers.traefik_https.tls.certResolver=staging'
      - 'traefik.http.routers.traefik_https.service=api@internal'
      - 'traefik.http.routers.traefik_https.middlewares=basic-auth-global'
      - 'traefik.http.middlewares.basic-auth-global.basicauth.users=${TRAEFIK_USER}:${TRAEFIK_ENCODED_PASS}'
    depends_on:
      - jellyfin
      - transmission
      - nextcloud
    command:
      - --metrics.prometheus.addrouterslabels=true

  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin
    user: 1000:1000
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - ./jellyfin/media/:/media
    restart: always
    labels:
      - 'traefik.enable=true'
      ## HTTP Router
      - 'traefik.http.routers.jellyfin.entryPoints=https'
      - "traefik.docker.network=traefik"
      - 'traefik.http.routers.jellyfin.rule=Host(`jellyfin.dsprojects.pl`)'
      - 'traefik.http.routers.jellyfin.tls=true'
      - 'traefik.http.routers.jellyfin.tls.certResolver=staging'
      - 'traefik.http.routers.jellyfin.tls.domains=jellyfin.dsprojects.pl'
      ## Middleware
      - 'traefik.http.routers.jellyfin.middlewares=jellyfin-mw'
      - 'traefik.http.middlewares.jellyfin-mw.headers.customResponseHeaders.X-Robots-Tag=noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
      - 'traefik.http.middlewares.jellyfin-mw.headers.SSLRedirect=true'
      - 'traefik.http.middlewares.jellyfin-mw.headers.SSLHost=jellyfin.dsprojects.pl'
      - 'traefik.http.middlewares.jellyfin-mw.headers.SSLForceHost=true'
      - 'traefik.http.middlewares.jellyfin-mw.headers.STSSeconds=315360000'
      - 'traefik.http.middlewares.jellyfin-mw.headers.STSIncludeSubdomains=true'
      - 'traefik.http.middlewares.jellyfin-mw.headers.STSPreload=true'
      - 'traefik.http.middlewares.jellyfin-mw.headers.forceSTSHeader=true'
      - 'traefik.http.middlewares.jellyfin-mw.headers.frameDeny=true'
      - 'traefik.http.middlewares.jellyfin-mw.headers.contentTypeNosniff=true'
      - 'traefik.http.middlewares.jellyfin-mw.headers.browserXSSFilter=true'
      - "traefik.http.middlewares.jellyfin-mw.headers.customFrameOptionsValue='allow-from https://jellyfin.dsprojects.pl'"
      ## HTTP Service
      - 'traefik.http.routers.jellyfin.service=jellyfin-svc'
      - 'traefik.http.services.jellyfin-svc.loadBalancer.server.port=8096'
      - 'traefik.http.routers.jellyfin-insecure.entryPoints=http'
      - 'traefik.http.routers.jellyfin-insecure.rule=Host(`jellyfin.dsprojects.pl`)'
      - 'traefik.http.routers.jellyfin-insecure.middlewares=jellyfin-insecure-mw'
      - 'traefik.http.middlewares.jellyfin-insecure-mw.redirectscheme.scheme=https'
      - 'traefik.http.middlewares.jellyfin-insecure-mw.redirectscheme.permanent=false'
      - 'traefik.http.routers.jellyfin-insecure.service=noop@internal'

  transmission:
    container_name: transmission
    image: linuxserver/transmission
    restart: unless-stopped
    ports:
      - "51413:51413"
      - "51413:51413/udp"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Warsaw
      - USER=${TRANSMISSION_USER}
      - PASS=${TRANSMISSION_PASS}
    volumes:
      - ./transmission/config:/config
      - ./transmission/downloads:/downloads
      - ./transmission/watch:/watch
    labels:
      - 'traefik.enable=true'
      ## HTTP Router
      - 'traefik.http.routers.transmission.entryPoints=https'
      - "traefik.docker.network=traefik"
      - 'traefik.http.routers.transmission.rule=Host(`transmission.dsprojects.pl`)'
      - 'traefik.http.routers.transmission.tls=true'
      - 'traefik.http.routers.transmission.tls.certResolver=staging'
      - 'traefik.http.routers.transmission.tls.domains=transmission.dsprojects.pl'
      ## Middleware
      - 'traefik.http.routers.transmission.middlewares=transmission-mw'
      - 'traefik.http.middlewares.transmission-mw.headers.customResponseHeaders.X-Robots-Tag=noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
      - 'traefik.http.middlewares.transmission-mw.headers.SSLRedirect=true'
      - 'traefik.http.middlewares.transmission-mw.headers.SSLHost=transmission.dsprojects.pl'
      - 'traefik.http.middlewares.transmission-mw.headers.SSLForceHost=true'
      - 'traefik.http.middlewares.transmission-mw.headers.STSSeconds=315360000'
      - 'traefik.http.middlewares.transmission-mw.headers.STSIncludeSubdomains=true'
      - 'traefik.http.middlewares.transmission-mw.headers.STSPreload=true'
      - 'traefik.http.middlewares.transmission-mw.headers.forceSTSHeader=true'
      - 'traefik.http.middlewares.transmission-mw.headers.frameDeny=true'
      - 'traefik.http.middlewares.transmission-mw.headers.contentTypeNosniff=true'
      - 'traefik.http.middlewares.transmission-mw.headers.browserXSSFilter=true'
      - "traefik.http.middlewares.transmission-mw.headers.customFrameOptionsValue='allow-from https://transmission.dsprojects.pl'"
      ## HTTP Service
      - 'traefik.http.routers.transmission.service=transmission-svc'
      - 'traefik.http.services.transmission-svc.loadBalancer.server.port=9091'
      - 'traefik.http.routers.transmission-insecure.entryPoints=http'
      - 'traefik.http.routers.transmission-insecure.rule=Host(`transmission.dsprojects.pl`)'
      - 'traefik.http.routers.transmission-insecure.middlewares=transmission-insecure-mw'
      - 'traefik.http.middlewares.transmission-insecure-mw.redirectscheme.scheme=https'
      - 'traefik.http.middlewares.transmission-insecure-mw.redirectscheme.permanent=false'
      - 'traefik.http.routers.transmission-insecure.service=noop@internal'

  postgres:
    restart: always
    image: postgres:latest
    networks:
      - nextcloud
    environment:
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASS}
    - POSTGRES_DB=nextcloud
    volumes:
    - nextcloud-db:/var/lib/postgresql/data

  redis:
    image: redis:latest
    restart: always
    networks:
      - nextcloud
    volumes:
      - redis:/var/lib/redis

  nextcloud:
    image: nextcloud:latest
    restart: always
    networks:
      - nextcloud
    depends_on:
      - redis
      - postgres
    labels:
      - 'traefik.enable=true'
      ## HTTP Router
      - 'traefik.http.routers.nextcloud.entryPoints=https'
      - "traefik.docker.network=traefik"
      - 'traefik.http.routers.nextcloud.rule=Host(`cloud.dsprojects.pl`)'
      - 'traefik.http.routers.nextcloud.tls=true'
      - 'traefik.http.routers.nextcloud.tls.certResolver=staging'
      - 'traefik.http.routers.nextcloud.tls.domains=cloud.dsprojects.pl'
      ## Middleware
      - 'traefik.http.routers.nextcloud.middlewares=nextcloud-mw'
      - 'traefik.http.middlewares.nextcloud-mw.headers.customResponseHeaders.X-Robots-Tag=noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
      - 'traefik.http.middlewares.nextcloud-mw.headers.SSLRedirect=true'
      - 'traefik.http.middlewares.nextcloud-mw.headers.SSLHost=cloud.dsprojects.pl'
      - 'traefik.http.middlewares.nextcloud-mw.headers.SSLForceHost=true'
      - 'traefik.http.middlewares.nextcloud-mw.headers.STSSeconds=315360000'
      - 'traefik.http.middlewares.nextcloud-mw.headers.STSIncludeSubdomains=true'
      - 'traefik.http.middlewares.nextcloud-mw.headers.STSPreload=true'
      - 'traefik.http.middlewares.nextcloud-mw.headers.forceSTSHeader=true'
      - 'traefik.http.middlewares.nextcloud-mw.headers.frameDeny=true'
      - 'traefik.http.middlewares.nextcloud-mw.headers.contentTypeNosniff=true'
      - 'traefik.http.middlewares.nextcloud-mw.headers.browserXSSFilter=true'
      - "traefik.http.middlewares.nextcloud-mw.headers.customFrameOptionsValue='allow-from https://cloud.dsprojects.pl'"
      ## HTTP Service
      - 'traefik.http.routers.nextcloud.service=nextcloud-svc'
      - 'traefik.http.services.nextcloud-svc.loadBalancer.server.port=9095'
      - 'traefik.http.routers.nextcloud-insecure.entryPoints=http'
      - 'traefik.http.routers.nextcloud-insecure.rule=Host(`cloud.dsprojects.pl`)'
      - 'traefik.http.routers.nextcloud-insecure.middlewares=nextcloud-insecure-mw'
      - 'traefik.http.middlewares.nextcloud-insecure-mw.redirectscheme.scheme=https'
      - 'traefik.http.middlewares.nextcloud-insecure-mw.redirectscheme.permanent=false'
      - 'traefik.http.routers.nextcloud-insecure.service=noop@internal'
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
      - POSTGRES_HOST=postgres
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_PASS}
      - REDIS_HOST=redis
      - NEXTCLOUD_TRUSTED_DOMAINS=cloud.dsprojects.pl
      - TRUSTED_PROXIES=172.17.0.0/16
    volumes:
      - nextcloud-www:/var/www/html

volumes:
  traefik-ssl-certs:
    driver: local
  nextcloud-db:
    driver: local
  redis:
    driver: local
  nextcloud-www:
    driver: local